<?php


namespace app\admin\controller;


use think\Controller;
use think\Db;

class Category extends Controller
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        checkToken();
    }

    public function add(){
        // 1. 权限验证
        //判断请求方式
        if(!$this->request->isPost()){
            return json([
                'code'=>404,
                'msg'=>"请求方式错误"
            ]);
        };
        //获取前台数据
        $data=$this->request->post();
        //数据验证
        $validate = validate('Category');
        $flag=$validate->scene('add')->check($data);
        if(!$flag){
            return json([
                'code'=>404,
                'msg'=>$validate->getError()
            ]);
        }
        $result=Db::table("category")->insert($data);
        if($result){
            return json([
                'code'=>200,
                'msg'=>"分类添加成功"
            ]);
        }else{
            return json([
                'code'=>404,
                'msg'=>"分类添加失败"
            ]);
        }
    }


    /*
     * 产看数据，分页，搜索
     * 前台：查看符合指定条件地某一页若干条数据
     * 后台，当前台数据传入，发送数据总数
     */

    public function show(){
        //获取搜索的信息
        $data=$this->request->get();
        if(isset($data['page']) && !empty($data['page'])){
            $page=$data['page'];
        }else{
            $page=1;
        }
        if(isset($data['limit']) && !empty($data['limit'])){
            $limit=$data['limit'];
        }else{
            $limit=5;
        }

        $where=[];
        if(isset($data['cname']) && !empty($data['cname'])){
            $where['cname']=['like','%'.$data['cname'].'%'];
        }

        $category=Db::table("category")->field('cid,cname,cdesc')->where($where)->page($page)->limit($limit)->select();
        $count=Db::table("category")->where($where)->count();

        if($category && $count){
            return json([
                'code'=>200,
                'msg'=>"数据获取成功",
                'data'=>$category,
                'count'=>$count
            ]);
        }else{
            return json([
                'code'=>200,
                'msg'=>"暂无数据"
            ]);
        }

    }

//    public function sort(){
//        //判断请求方式
//        if(!$this->request->isPost()){
//            return json([
//                'code'=>404,
//                'msg'=>"请求方式错误"
//            ]);
//        };
//        //获取搜索的信息
//        $data=$this->request->post();
//        $order=$data['order'];
//        if($order=="正序"){
//            $result=Db::table("category")->order("cid")->select();
//        }else if($order=="倒序"){
//            $result=Db::table("category")->order("cid",'desc')->select();
//        }
//        dump($result);
//
//
//    }

    public function read(){
        //获取前台数据，取到id
        $data=$this->request->get();
        $cid=$data['cid'];
        //验证数据
        $validate = validate('Category');
        $flag=$validate->scene('read')->check($data);
        if(!$flag){
            return json([
                'code'=>404,
                'msg'=>$validate->getError()
            ]);
        }
        //从数据库获取相应的数据
        $result=Db::table('category')->where('cid',$cid)->find();
        if($result){
            return json([
                'code'=>200,
                'msg'=>"数据获取成功",
                'data'=>$result,
            ]);
        }else{
            return json([
                'code'=>200,
                'msg'=>"暂无数据"
            ]);
        }

    }

    public function edit(){
        //判断请求方式
        if(!$this->request->isPut()){
            return json([
                'code'=>404,
                'msg'=>"请求方式错误"
            ]);
        };
        //获取前台数据，取到id
        $data=$this->request->put();
        $cid=$data['cid'];
        //验证数据
        $validate = validate('Category');
        $flag=$validate->scene('add')->check($data);
        if(!$flag){
            return json([
                'code'=>404,
                'msg'=>$validate->getError()
            ]);
        }
        //修改数据库数据
        $result=Db::table('category')->where('cid',$cid)->update(['cname'=>$data['cname'],'cdesc'=>$data['cdesc']]);
        if($result){
            if($result){
                return json([
                    'code'=>200,
                    'msg'=>"数据修改成功",
                ]);
            }else{
                return json([
                    'code'=>500,
                    'msg'=>"数据修改失败"
                ]);
            }
        }

    }

    public function delete(){
        //获取前台数据，取到id
        $data=$this->request->delete();
        $cid=$data['cid'];
        //验证数据
        $validate = validate('Category');
        $flag=$validate->scene('read')->check($data);
        if(!$flag){
            return json([
                'code'=>404,
                'msg'=>$validate->getError()
            ]);
        };
        //删除数据库数据
        $result=Db::table('category')->where('cid',$cid)->delete();
        if($result){
            if($result){
                return json([
                    'code'=>200,
                    'msg'=>"数据删除成功",
                ]);
            }else{
                return json([
                    'code'=>500,
                    'msg'=>"数据删除失败"
                ]);
            }
        }
    }
}